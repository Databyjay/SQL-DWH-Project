/*
this script will truncate the tables ables and insert the filtered and corrected data in to respective tables

and creates the stored precedure with showing the time stamps for each table while loading the data
*/

create or alter procedure silver.load_silver as

Begin
	declare @start_time DATETIME, @end_time DATETIME;
	begin try
		print  '==========================================================';
		print	'Loading Silver.CRM Data';
		print	'==========================================================';

	set @start_time = getdate();
	print 'truncating Silver.crm_cust_info'
	truncate table Silver.crm_cust_info;

	print 'Inserting Data into Silver.insert into Silver.crm_cust_info'
	insert into Silver.crm_cust_info (
		cst_id,
		cst_key,
		cst_firstname,
		cst_lastname,
		cst_marital_status,
		cst_gndr,
		cst_create_date	)
	select 
		cst_id,
		cst_key,
		trim(cst_firstname) as cst_firstname,
		trim(cst_lastname) as cst_lastname,
		case
			when upper(trim(cst_marital_status)) = 's' then 'Single'
			when upper(trim(cst_marital_status)) = 'M' then 'Married'
			else 'n/a'
		end
		cst_marital_status,
			case
			when upper(trim(cst_gndr)) = 'F' then 'Female'
			when upper(trim(cst_gndr)) = 'M' then 'Male'
			else 'n/a'
		end
		cst_gndr,
		cst_create_date 
		from
	(
	select *,
	row_number() over (partition by cst_id order by cst_create_date desc) as flag_last
	from Bronze.crm_cust_info
	where cst_id is not null
	)t
	where flag_last = 1;
	set @end_time = getdate();
	print '>> Loading duration :' + cast(datediff(second , @start_time, @end_time) as nvarchar) + 'Seconds';
	print '----------------------------------------------'


	set @start_time = getdate();
	print 'truncating Silver.crm_prd_info'
	truncate table Silver.crm_prd_info;

	print 'Inserting Data into Silver.insert into Silver.crm_prd_info'
	insert into silver.crm_prd_info 
	(
		prd_id,
		Cat_ID,
		prd_key,
		prd_nm,
		prd_cost,
		prd_line,
		prd_start_dt,
		prd_end_dt
	)
	select 
		   prd_id,
		  replace (substring(prd_key, 1, 5),'-','_') as Cat_ID,
		  substring(prd_key, 7, LEN(prd_key)) as Prd_key,
		  prd_nm,
		  isnull(prd_cost, 0) as prd_cost,
		  case upper(trim(prd_line))
				when 'M' then 'Mountain'
				when 'R' then 'Road'
				when 'S' then 'Other Sales'
				when 'T' then 'Touring'
				else 'n/a'
				end as prd_line,
				cast(prd_start_dt as date) as prd_start_dt,
		  DATEADD(DAY, -1, LEAD(prd_start_dt) OVER (PARTITION BY prd_key ORDER BY prd_start_dt)) AS prd_end_dt
		from Bronze.crm_prd_info;
		set @end_time = getdate();
		print '>> Loading duration :' + cast(datediff(second , @start_time, @end_time) as nvarchar) + 'Seconds';
		print '----------------------------------------------'

	set @start_time = getdate();
	print 'truncating Silver.crm_sales_details'
	truncate table Silver.crm_sales_details;

	print 'Inserting Data into Silver.insert into Silver.crm_sales_details'
	insert into Silver.crm_sales_details
	(	sls_ord_num,
		sls_prd_key,
		sls_cust_id,
		sls_order_dt,
		sls_ship_dt,
		sls_due_dt,
		sls_sales,
		sls_quantity,
		sls_price
	)
	select sls_ord_num,
		  sls_prd_key,
		  sls_cust_id,
  		  case when sls_order_dt = 0 or len(sls_order_dt) != 8 then null
		  else cast(cast(sls_order_dt as varchar(10)) as date)
		  end as sls_order_dt,
		  case when sls_ship_dt = 0 or len(sls_ship_dt) != 8 then null
		  else cast(cast(sls_ship_dt as varchar(10)) as date)
		  end as sls_ship_dt,
		  case when sls_due_dt = 0 or len(sls_due_dt) != 8 then null
		  else cast(cast(sls_due_dt as varchar(10)) as date)
		  end as sls_due_dt,
		  case when sls_sales is null or sls_sales <= 0 or sls_sales != sls_quantity * abs(sls_price)
			then sls_quantity * ABS(sls_price)
			else sls_sales
			end as sls_sales,
		  sls_quantity,
		  case when sls_price is null or sls_price <= 0
			then sls_sales/nullif(sls_quantity,0)
			else sls_price
			end as sls_price 
	from Bronze.crm_sales_details;
	set @end_time = getdate();
	print '>> Loading duration :' + cast(datediff(second , @start_time, @end_time) as nvarchar) + 'Seconds';
	print '----------------------------------------------'

		print  '==========================================================';
		print	'Loading Silver.ERP Data';
		print	'==========================================================';
	set @start_time = getdate();
	print '>>> truncating table silver.erp_CUST_AZ12'
	truncate table silver.erp_CUST_AZ12

	print 'inserting data into table Silver.erp_CUST_AZ12'
	insert into Silver.erp_CUST_AZ12
	(
	CID,
	BDATE,
	GEN
	)
	select 
	case when CID like 'NAS%' then SUBSTRING(CID, 4, len(CID)) 
	else CID
	end as CID,
	case when BDATE > getdate() then null
	else BDATE
	end as BDATE,
	case when upper(trim(gen)) in ('M', 'Male') then 'Male'
		 when upper(trim(gen)) in ('F', 'Female') then 'Female'
		 else 'n/a'
		end as GEN
	from Bronze.erp_CUST_AZ12;
	set @end_time = getdate();

	set @start_time = getdate();
	print 'truncating Silver.insert into Silver.erp_LOC_A101'
	truncate table Silver.erp_LOC_A101;

	print 'Inserting Data into Silver.insert into Silver.erp_LOC_A101'
	insert into Silver.erp_LOC_A101
	(
	CID,
	CNTRY
	)
	select 
	REPLACE(CID, '-','') as CID,
	case	when trim(CNTRY) = 'DE' then 'Germany'
			when  trim(CNTRY) in ('US','United States')then 'United States'
			when  trim(CNTRY) = '' or CNTRY is null then 'n/a'
			  else trim(CNTRY)
		end as CNTRY
	from Bronze.erp_LOC_A101;
	set @end_time = getdate();
	print '>> Loading duration :' + cast(datediff(second , @start_time, @end_time) as nvarchar) + 'Seconds';
	print '----------------------------------------------'

	set @start_time = getdate();
	print 'truncating Silver.erp_PX_CAT_G1V2'
	truncate table Silver.erp_PX_CAT_G1V2;

	print 'Inserting Data into Silver.erp_PX_CAT_G1V2'
	insert into Silver.erp_PX_CAT_G1V2
	(
	ID,
	CAT ,
	SUBCAT,
	MAINTENANCE
	)
	select
	ID,
	CAT ,
	SUBCAT,
	MAINTENANCE
	from Bronze.erp_PX_CAT_G1V2;
	set @end_time = getdate();
	print '>> Loading duration :' + cast(datediff(second , @start_time, @end_time) as nvarchar) + 'Seconds';
	print '----------------------------------------------'
	
	
	end try
	begin catch
	print	'==========================================================';
	print	'Error occured during Loading Data into Silver Layer';
	print	'Error message' + error_message();
	print	'Error message' + cast(error_number() as nvarchar);
	print	'Error message' + cast(error_state() as nvarchar);
	print	'==========================================================';

	end catch

end
