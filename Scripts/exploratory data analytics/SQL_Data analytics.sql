use DataWarehouseAnalytics

select * from gold.dim_customers;

select * from INFORMATION_SCHEMA.TABLES;

-- column information

select * from INFORMATION_SCHEMA.COLUMNS
where TABLE_NAME = 'dim_customers';

--- explore all the countries all our customers come from

select distinct country from gold.dim_customers;

--- explore all distinct categories from products

select distinct category, subcategory, product_name
from gold.dim_products
order by 1,2,3;

-- find the first and last order date
--- how many year of sales are available

select 
min(order_date) as first_order,
max(order_date) as last_order,
datediff(YEAR, min(order_date),max(order_date)) as years_diff,
datediff(MONTH, min(order_date),max(order_date)) as months_diff
from gold.fact_sales;

---- find the youngest & oldest customer

select
min(birthdate) as older_customer,
max(birthdate) as youngest_customer,
datediff(year, min(birthdate), getdate()) as senior_age,
datediff(year, max(birthdate), getdate()) as yonger_age,
datediff(year, min(birthdate), max(birthdate)) as age_gap
from gold.dim_customers;

---- measure exploration

---find total sales

select 
sum(sales_amount) as total_sales 
from gold.fact_sales;

--- how many items are sold

select sum(quantity) from gold.fact_sales;

-- find the average selling price 

select avg(price) from gold.fact_sales;

--- find total no of orders

select count(order_number) as total_orders from gold.fact_sales;
select count(distinct order_number) as total_orders from gold.fact_sales;

---- find total no of products

select count(distinct product_name) as total_products from gold.dim_products;
select count(product_key) as total_products from gold.dim_products;

---- find the total no of customers
-- we can find the customers based on their ID

select count(customer_key) as total_customers from gold.dim_customers;
select count(customer_id) as total_customers from gold.dim_customers;

---- find the total no of customers that have placed order

select 
count(customer_key) as order_count from gold.fact_sales;


--- to get all these details in one go


select 'Total sales' as Measure_name, sum(sales_amount) as Measure_Value from gold.fact_sales
union all
select 'Total Quantity' as Measure_name, sum(quantity) as Measure_Value from gold.fact_sales
union all
select 'Average Price' as Measure_name, avg(price) as Measure_Value  from gold.fact_sales
union all
select 'No of orders' as Measure_name, count(distinct order_number) as Measure_Value from gold.fact_sales
union all
select 'Total no of Products' as Measure_name, count(product_key) as Measure_Value from gold.dim_products
union all
select 'Total no of Customers' as Measure_name, count(customer_id) as Measure_Value from gold.dim_customers
union all
select 'Orders Count' as Measure_name, count(customer_key) as Measure_Value from gold.fact_sales



------- Finding the Magnitude
--- total no of customers by countries
select 
count(Customer_id) as Customers_by_country,
country
from gold.dim_customers
group by country
order by Customers_by_country desc;

--- total no of customers by gender

select 
Count(CONCAT(first_name, ' ' , last_name)) as Gender_count,
gender
from gold.dim_customers
group by gender
order by Gender_count desc;

---total products by category

select 
count(product_id) as no_of_products_by_category,
category
from gold.dim_products
group by category
order by no_of_products_by_category desc;

---- Avg cost of each category

select 
Avg(cost) as Average_cost,
category
from gold.dim_products
group by category
order by Average_cost desc;

--- total revenue generated by each category

select
sum(cost) as Total_revenue,
category
from gold.dim_products
group by category
order by Total_revenue desc;

--- total revenue generated by each customer

select
customer_key,
sum(sales_amount) as Customer_revenue
from gold.fact_sales
group by customer_key
order by Customer_revenue desc;

--- Distribution of sold items across countries

select
p.category,
sum(f.sales_amount) total_revenue
from gold.fact_sales f
left join gold.dim_products p
on p.product_key = f.product_key
group by p.category
order by total_revenue desc;

-- Fetch the sales of each customer

select 
sum(sales_amount) as sales_by_customer,
customer_key
from gold.fact_sales
group by customer_key
order by sales_by_customer desc;

select 
c.customer_key,
c.first_name,
c.last_name,
sum(f.sales_amount) as sales_by_customer
from gold.fact_sales f
left join gold.dim_customers c
on f.customer_key = c.customer_key
group by c.customer_key,
c.first_name,
c.last_name
order by sales_by_customer desc;

--- distrbution of sold items across countries
select 
c.country,
sum(f.quantity) as sold_items
from gold.dim_customers c
left join gold.fact_sales f
on c.customer_key = f.customer_key
group by country
order by sold_items desc;

--- Ranking Analysis
--Q1) which 5 products generate highest revenue
select * from
   (
	select 
	p.product_name,
	sum(f.sales_amount) as Sales_Amount,
	rank() over (order by sum(f.sales_amount) desc) as Rank_of_revenue
	from gold.dim_products p 
	left join gold.fact_sales f
	on p.product_key = f.product_key
	group by p.product_name
	) as revenue_rank
	where Rank_of_revenue <= 5;

---- or can also write code as

select top 5
p.product_name,
sum(f.sales_amount) as total_revenue
from gold.dim_products p
inner join gold.fact_sales f
on p.product_key = f.product_key
group by product_name
order by total_revenue
;

--- select the top 10 customers who generated highest revenue

select top 10
CONCAT(c.first_name,' ',c.last_name) as Customer_Name,
sum(f.sales_amount) as Generated_revenue,
sum(f.quantity) as total_quantity
from gold.dim_customers c
left join gold.fact_sales f
on c.customer_key = f.customer_key
group by c.first_name, c.last_name
order by Generated_revenue desc;

--- top 3 worst revenure generated

select top 3
CONCAT(c.first_name,' ',c.last_name) as Customer_Name,
coalesce(sum(f.sales_amount),0) as Generated_revenue,
count(distinct(f.quantity)) as total_quantity
from gold.dim_customers c
left join gold.fact_sales f
on c.customer_key = f.customer_key
group by c.first_name, c.last_name
order by Generated_revenue;

---or

select top 3
c.customer_key,
c.first_name,
c.last_name,
COUNT(distinct order_number) as total_orders
from gold.fact_sales f
left join gold.dim_customers c
on f.customer_key = c.customer_key
group by 
c.customer_key,
c.first_name,
c.last_name
order by total_orders;




